/***********************************************************/
/*** Sample program demonstrating the sending of signals ***/
/***********************************************************/
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <signal.h>
/* The signal handler for the child process */
void childSigHandler ( int sig )
{
   if (sig == SIGUSR1) {
      printf("+++ Child : Received signal SIGUSR1 from parent...\n");
      sleep(1);
   } else if (sig == SIGUSR2) {
      printf("+++ Child : Received signal SIGUSR2 from parent...\n");
      sleep(5);
   }
   exit(0);
}

int main ()
{
   int pid;
   pid = fork();                                 /* Spawn the child process */
   if (pid) {
        (void) signal(SIGCHLD, SIG_DFL);
        while(1){
            printf("Parent Waiting");
            sleep(1);
        }                                                    /* Parent process */
   }
   
   else {                                                           /* Child process */
      signal(SIGUSR1, childSigHandler);         /* Register SIGUSR1 handler */
      signal(SIGUSR2, childSigHandler);         /* Register SIGUSR2 handler */
      while (1){
            printf("Child Waiting");
            sleep(1); /* Sleep until a signal is received from parent   */
      }
   }
   exit(0);
}

